# Save 2000 lines of history
HISTSIZE=2000
HISTFILE=~/.zsh_history
SAVEHIST=2000
# Do not save duplicate entries
setopt HIST_IGNORE_DUPS
setopt INC_APPEND_HISTORY
setopt COMPLETE_IN_WORD

setopt short_loops

# NO BEEPING!
setopt no_BEEP

# Don't display an error if there are no matches, I know what I am doing
setopt no_NOMATCH

# Leave processes open when closing a shell with background processes
setopt no_HUP

# Skip .o-files when completing for vi
fignore=(.o)

alias acs='apt-cache search'
alias agr='sudo apt-get remove'
alias agi='sudo apt-get install'

alias g='git'

# Nicer output of ls
alias ls='ls --color=auto'
alias ll='ls -hl'

# More passwords, faster!
alias pw='pwgen -s 23 1'

# Color output of man
alias man="TERMINFO=~/.terminfo/ LESS=C TERM=mostlike PAGER=less man"

# Options for cdparanoia
alias ripcd='cdparanoia -Bs 1-'

alias iso='LANG=en_US.ISO-8859-1 LC_ALL=en_US.ISO-8859-1 urxvt'

# Burn a single file onto CD-ROM
alias burnfile='mkisofs ${1} | cdrecord driveropts=burnfree -v fs=6m -'
function burndvd {
	growisofs -dvd-compat -Z /dev/sr0=${1}
}

# A nicer ps-output
alias p='ps -A f -o user,pid,priority,ni,pcpu,pmem,args'
# one-key-ssh-aliases
alias s='ssh ircd'

alias nh='unset HISTFILE'

alias sd='svn diff --diff-cmd=colordiff | less'

# Go into suspend-to-ram (we need to start echo in a subshell to redirect its output)
# Also, the CDROM-drive does not work if we don't un- and reload the driver
#alias susp='sudo rmmod ide_cd && sudo rmmod cdrom && /opt/e17/bin/enlightenment_remote -lock-desktop && sudo sh -c "echo mem > /sys/power/state" && sudo modprobe cdrom && sudo modprobe ide_cd && sudo sh -c "echo 0 > /proc/sys/dev/cdrom/lock"'
alias susp='slock && sudo sh -c "echo mem > /sys/power/state"'

alias bc='bc -l'
alias vi='vim'

# Play random movie
alias mprnd='files=(*); let "r = $RANDOM % ${#files}"; ([ -f ${files[$r]} ] && mplayer ${files[$r]}) || ([ -d ${files[$r]} ] && mplayer ${files[$r]}/*{avi,mpg} )'

function set_termtitle() {
	case $TERM in
		*xterm|rxvt*)
			print -Pn "\e]0;$1\a"
			;;
		screen*)
			print -Pn "\e_$1\e\\"
			;;
	esac
}

preexec() { set_termtitle "%m: $1" }
precmd() { set_termtitle "%m: %~" }

# Scannen in angenehm
function scan() {
	scanimage --format TIFF --resolution 300 -x 215 -y 297 > $1.tiff && convert $1.tiff -resize 1024x $1.jpg
}

# Replacement for ps uax | grep $foo
function psof {
	PIDS=$(pidof ${1})
	[ -z "${PIDS}" ] && { echo "No such process"; return }
	ps -p "$PIDS" u
}

# Start mplayer with some options for nicer streaming on the given channel
function tv {
# -ni and -noidx: disable index (streams are not seekable)
# -framedrop: it's ok to drop some frames, MPEG-TS is a lossy format
# -vf kerndeint: specify deinterlacing for those broadcasters which don't do it themselves
# -prefer-ipv4: we don't have ipv6, so don't try
# -xineramascreen 0: needed for correct aspect-ratio
# -cache 4096: stream stutters if we don't buffer a bit
# -demuxer +mpegpes: tell mplayer what kind of stream this is
	mplayer -noidx -framedrop -vf kerndeint -prefer-ipv4 -cache 2048 -demuxer +mpegpes http://tv:7000/${1}
}

# Compresses all *.JPG and *.jpg files in the current directory and adds a nice border around
# Also creates thumbnails with very little size
function webpic {
	NAME=${1}
	c=0
	mkdir -p web/thumbs
	# Resize pictures
	for i in $(find . -iname "*.jpg"); do
		if [ $c -lt 10 ]; then
			rc=0${c}
		else
			rc=${c}
		fi
		[ ! -f web/${NAME}_${c}.jpg ] && {
			convert -resize 800x600\> $i web/${NAME}_${rc}.jpg -bordercolor white -border 6 -bordercolor grey60 -border 1 -background none -background black \( +clone -shadow 60x4+4+4 \) +swap -background white -flatten -depth 8 web/${NAME}_${rc}.jpg
		}
		c=$((c+1))
	done
	c=0
	# Generate thumbnails
	for i in $(find . -iname "*.jpg"); do
		if [ $c -lt 10 ]; then
			rc=0${c}
		else
			rc=${c}
		fi

		convert -resize 100x\> $i web/thumbs/${NAME}_${rc}.jpg
		c=$((c+1))
	done
}

# Same as webpic, but it doesn't add the borders and doesn't generate thumbs
function webresize {
	NAME=${1}
	c=0
	mkdir web
	# Resize pictures
	for i in $(find . -iname "*.jpg"); do
		if [ $c -lt 10 ]; then
			rc=0${c}
		else
			rc=${c}
		fi

#[ ! -f web/${NAME}_${rc}.jpg ] && convert -resize 800x600\> $i web/${NAME}_${rc}.jpg
		[ ! -f web/${NAME}_${rc}.jpg ] && convert -resize 1024x768\> $i web/${NAME}_${rc}.jpg
		c=$((c+1))
	done
}

# Define prompt
fg_green=$'%{\e[1;32m%}'
fg_light_blue=$'%{\e[1;36m%}'
fg_white=$'%{\e[1;37m%}'
fg_no_colour=$'%{\e[0m%}'
PROMPT="${fg_light_blue}%n${fg_no_colour} ${fg_green}%~${fg_no_colour}$ "

# Use VI-mode for entering commands
setopt VI

# Expand path to /usr/sbin and /sbin
export PATH=$PATH:/usr/sbin:/sbin
export EDITOR=/usr/bin/vim
export PAGER=/usr/bin/less

# Initialize completion
autoload compinit
compinit -C

# Set title
chpwd () { print -Pn "\e]0;%n@%m: %~\a" }
chpwd

# Load SSH-agent
. ~/.ssh/environment.midna
