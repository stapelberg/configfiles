#!/bin/bash

# readahead: read files while Emacs is starting up
cat -- "$@" >/dev/null 2>/dev/null &

start_daemon_and_connect=--alternate-editor=""

# CitC workspace, see also the Google monorepo paper:
# https://dl.acm.org/doi/pdf/10.1145/2854146?download=true
if [[ "$PWD" == /google/src/cloud/$USER/* ]]
then
  _citc=${PWD#/google/src/cloud/$USER/}
  _citc=${_citc/\/*/}
  unset EMACS_SERVER_FILE
  exec emacsclient --socket-name=$_citc --create-frame $start_daemon_and_connect "$@"
fi

# The environment may override our logic:
if [[ -n "$EMACS_SERVER_FILE" ]]
then
  exec emacsclient --create-frame $start_daemon_and_connect "$@"
fi

workspaces=$(i3-msg -t get_workspaces >&- 2>&-)
if [[ $? -eq 0 ]]
then
  namedws=$(echo "$workspaces" | jq -r 'map(select(.focused))[0].name' | sed 's,^[^:]*:\s*,,g')
  if [[ -n "$namedws" ]]
  then
    exec emacsclient --socket-name=$namedws --create-frame $start_daemon_and_connect "$@"
  fi
fi

# Fallback: do not set a socket name. This path is taken for example when using
# SSH X11 forwarding, where there is no running i3 on the SSH $DISPLAY.
exec emacsclient --create-frame $start_daemon_and_connect "$@"
